<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationsWillBeDeletedDueToSmallerSizeLabelContent" xml:space="preserve">
    <value>The new size is smaller and applications would become invisible!
These applications will be deleted.</value>
  </data>
  <data name="EditSmartbarSettingConfigurePluginsLabelContent" xml:space="preserve">
    <value>Some plugins are configurable and provide additional possibilities to change their behavior.</value>
  </data>
  <data name="EditSmartbarSettingsAccentColorSchemeLabelContent" xml:space="preserve">
    <value>Color scheme:</value>
  </data>
  <data name="EditSmartbarSettingsAppearenceTabItemHeader" xml:space="preserve">
    <value>Appearence</value>
  </data>
  <data name="EditSmartbarSettingsAutoSelectCreatedGroup" xml:space="preserve">
    <value>Auto select created group</value>
  </data>
  <data name="EditSmartbarSettingsBehaviorTabItemHeader" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="EditSmartbarSettingsColumnsLabelContent" xml:space="preserve">
    <value>Columns:</value>
  </data>
  <data name="EditSmartbarSettingsDeleteGroupWithMiddleMouseButton" xml:space="preserve">
    <value>Can delete group with middle mouse button</value>
  </data>
  <data name="EditSmartbarSettingsDeleteWithConfirmation" xml:space="preserve">
    <value>Confirm deletion of groups and applications</value>
  </data>
  <data name="EditSmartbarSettingsDialogDescriptionText" xml:space="preserve">
    <value>Edit the appearence and behavior of Smartbar and installed plugins.</value>
  </data>
  <data name="EditSmartbarSettingsDialogTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="EditSmartbarSettingsDirectEditOfGroupHeader" xml:space="preserve">
    <value>Direct edit of group header via double click</value>
  </data>
  <data name="EditSmartbarSettingsGridCellContentSizeLabelContent" xml:space="preserve">
    <value>Content size:</value>
  </data>
  <data name="EditSmartbarSettingsGridCellSpacingLabelContent" xml:space="preserve">
    <value>Content spacing:</value>
  </data>
  <data name="EditSmartbarSettingsHideGroupHeaderIfOnlyOneAvailable" xml:space="preserve">
    <value>Hide group header if only one group is available</value>
  </data>
  <data name="EditSmartbarSettingsLanguageLabelContent" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="EditSmartbarSettingsNotificationOnPluginUpdates" xml:space="preserve">
    <value>Enable and show updates to installed plugins</value>
  </data>
  <data name="EditSmartbarSettingsNotificationOnSmartbarUpdate" xml:space="preserve">
    <value>Enable and show updates to Smartbar</value>
  </data>
  <data name="EditSmartbarSettingsNotificationsTabItemHeader" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="EditSmartbarSettingsPinSmartbarAtPosition" xml:space="preserve">
    <value>Inhibit moving of Smartbar</value>
  </data>
  <data name="EditSmartbarSettingsPinSmartbarAtPositionTooltip" xml:space="preserve">
    <value>CTRL key disables this behaviour while pressed.</value>
  </data>
  <data name="EditSmartbarSettingsPluginSettingsTabItemHeader" xml:space="preserve">
    <value>Plugins</value>
  </data>
  <data name="EditSmartbarSettingsRestorePosition" xml:space="preserve">
    <value>Restore the position of Smartbar on each start up</value>
  </data>
  <data name="EditSmartbarSettingsRowsLabelContent" xml:space="preserve">
    <value>Rows:</value>
  </data>
  <data name="EditSmartbarSettingsShowStatusbar" xml:space="preserve">
    <value>Show statusbar (show the application name on hover)</value>
  </data>
  <data name="EditSmartbarSettingsSnapOnScreenBorders" xml:space="preserve">
    <value>Stick to screen borders</value>
  </data>
  <data name="EditSmartbarSettingsSnapOnScreenBordersTooltip" xml:space="preserve">
    <value>CTRL + ALT keys disables this behaviour while pressed.</value>
  </data>
  <data name="NoConfigurablePluginsAvailableLabelContent" xml:space="preserve">
    <value>There are no configurable plugins installed.</value>
  </data>
</root>